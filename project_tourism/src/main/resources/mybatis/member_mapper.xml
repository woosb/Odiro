<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<!-- 다른 mapper와 중복되지 않도록 네임스페이스 기재 -->
<!-- 회원가입 -->
<mapper namespace="memberMapper">
    
    <!-- 회원가입 mapper -->
    <insert id="insertUser" parameterType="com.tour.dto.MemberDTO">
    insert into member (nickName,E_MAIL, user_PASS)
    values (#{nickName},#{e_mail}, #{user_pass})
    </insert>
    
    
    <!-- 로그인 관련 mapper-->
    <select id = "login_check" parameterType=
    "com.tour.dto.MemberDTO"
    resultType="String">
        select e_mail from member
        where e_mail=#{e_mail} and user_pass=#{user_pass}
    </select>    
    
    
    <!-- 닉네임 찾기 관련 mapper -->
    <select id = "find_nickcname_check" parameterType=
    "com.tour.dto.MemberDTO"
    resultType="String">
        select nickname from member
        where e_mail=#{e_mail}
    </select>
    <select id = "getnick" parameterType=
    "String"
    resultType="String">
        select nickname from member
        where e_mail=#{e_mail}
    </select>
    
    <!-- 비밀번호 찾기 관련 mapper -->
    <select id = "find_pass_check" parameterType=
    "com.tour.dto.MemberDTO"
    resultType="String">
        select user_pass from member
        where e_mail=#{e_mail} and e_mail=#{e_mail}
    </select>
    
    
    <!-- 소셜 로그인 관련 mapper -->
    <!-- 소셜 로그인 한 후에 회원 인증 버튼을 누르면 소셜 로그인 api에서 받아온 정보를 데이터 베이스의 member테이블에 저장하도록 하는 쿼리 -->
    <insert id="authentication" parameterType="com.tour.dto.MemberDTO">
    insert into member (USER_ID, user_PASS, E_MAIL)
    values (#{user_id}, 0, #{e_mail})
    </insert>
    
    
    <!-- 비밀번호 변경 관련 mapper -->
    <update id = "passChange" parameterType="com.tour.dto.MemberDTO">
    update member set user_pass=#{user_pass} where e_mail=#{e_mail}
    </update>
    
    <!-- 닉네임 변경 관련 mapper -->
    <update id = "nickName_change" parameterType="com.tour.dto.MemberDTO">
    update member set nickName=#{nickName} where e_mail=#{e_mail}
    </update>
    
    
    <!-- 이메일 중복확인 관련 mapper-->
    <select id = "email_check" resultType="String">
        select e_mail from member
        where e_mail=#{e_mail}
    </select>
    
    
    <!-- 닉네임 중복확인 관련 mapper-->
    <select id = "nickName_check" resultType="String">
        select nickName from member
        where nickName=#{nickName}
    </select>        
    <select id = "get_email" resultType="String">
    select e_mail
    from member
    where nickname=#{nick}
    </select>
    
    <!-- 회원 프로필 확인 mapper -->
    <select id = "member_profile" resultType="com.tour.dto.MemberDTO">
    select *
    from member
    where e_mail=#{e_mail}
    </select>
    <!-- 관리자 페이지 mapper -->
    <select id = "member" resultType="com.tour.dto.MemberDTO">
    select * from member
    </select>
    <!-- 회원 강제 삭제 mapper -->
    <delete id="remove" parameterType="String">
    delete from member
    where e_mail=#{e_mail}
    </delete>
    
    
</mapper>